{{ block.block_image.url }}"

 {% else %}
                                <img class="card-img-top" src="{% static 'images/default.jpg' %}"
                                alt="placeholder image">

                                from home.html <img class="card-img-top" src="{{ block.block_image.url }}" alt="{{ block.title }}">

---------------------------------------------------------
Student modal-title
from django.contrib.auth.models import User
from django.db import models


class Student(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    first_name = models.CharField(max_length=150, default="Unknown")
    last_name = models.CharField(max_length=150, default="Unknown")
    phone_number = models.CharField(max_length=15, default="Unknown")
    booked_test_day = models.DateField(default=None, null=True, blank=True)


    def __str__(self):
        return f"{self.first_name} {self.last_name} (Student)"

-----------------------------------------------------------------
Student forms

from allauth.account.forms import SignupForm
from django import forms
from .models import Student

class CustomSignupForm(SignupForm):
    first_name = forms.CharField(max_length=150, required=True)
    last_name = forms.CharField(max_length=150, required=True)
    phone_number = forms.CharField(max_length=15, required=True)

    def save(self, request):
        user = super().save(request)
        user.first_name = self.cleaned_data['first_name']
        user.last_name = self.cleaned_data['last_name']
        user.save()  

        # Create the Student with the provided name and phone number
        Student.objects.create(
            user=user,
            first_name=self.cleaned_data['first_name'],
            last_name=self.cleaned_data['last_name'],
            phone_number=self.cleaned_data['phone_number']
        )
        return user

---------------------------------------------------------
from <base.html
{% url 'booking' as booking_url %}

----------------------------------------------
from booking models

 from django.shortcuts import render, redirect
# from .models import Booking
# from .forms import BookingForm
# from datetime import datetime, timedelta



# def booking_view(request):
#     if request.method == 'POST':
#         form = BookingForm(request.POST)
#         if form.is_valid():
#             booking = form.save(commit=False)
#             if booking.date >= date.today() + timedelta(days=1):
#                 booking.save()
#                 return redirect('booking_success')
#             else:
#                 form.add_error('date', 'Booking date must be at least tomorrow')
#     else:
#         form = BookingForm()

#     return render(request, 'booking/booking.html', {'form': form})

---------------------------------------------
from booking forms

class BookingForm(forms.ModelForm):
    class Meta:
        model = Booking
        fields = ['location', 'date', 'time_slot', 'notes']

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        tomorrow = datetime.date.today() + datetime.timedelta(days=1)
        self.fields['date'].widget = forms.SelectDateWidget()
        self.fields['date'].initial = tomorrow

        self.fields['time_slot'].widget = forms.Select(choices=Booking.TIME_SLOT_CHOICES)

        ---------------------------------------------------------
        from booking admin

        from django.contrib import admin
from .models import Booking
from django_summernote.admin import SummernoteModelAdmin

@admin.register(Booking)
class ContentBlockAdmin(SummernoteModelAdmin):

    list_display = ('location', 'date', 'time_slot', 'notes')
    list_editable = ('section', 'order', 'publish')
    search_fields = ['title','section','publish']
    list_filter = ('section','publish')
    summernote_fields = ('content',)
    ordering = ('order',)

Register your models here.
---------------------------------------------
from booking urls

from django.urls import path
from .views import booking_view

urlpatterns = [
    path('booking/', booking_view, name="booking"),
]

---------------------------------------------
from booking <template>
    {% extends "base.html" %}
{% load static %}
{% block content %}

<h2>Book Your Lesson</h2>

<div id="calendar"></div>

<form method="POST">
    {% csrf_token %}
    <input  id="selected_date" name="date">
    <input type="hidden" id="selected_time" name="time">
    <button type="submit">Confirm Booking</button>
</form>

{% endblock %}
</template>


---------------------------------------
for booking_new.html


{% if bookings %}
    <ul class="list-group">
        {% for booking in bookings %}
            <li class="list-group-item mb-3">
                <strong>{{ booking.location }}</strong> — {{ booking.date }} — {{ booking.get_time_slot_display }}
                <div class="mt-2">
                    <a href="{% url 'booking_edit' booking.pk %}" class="btn btn-primary btn-sm">Edit</a>
                    <a href="{% url 'booking_delete' booking.pk %}" class="btn btn-danger btn-sm">Delete</a>
                </div>
            </li>
        {% endfor %}
    </ul>
{% else %}
    <p>No bookings yet.</p>
{% endif %}